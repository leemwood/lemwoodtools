name: Android CI

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'debug'
        type: choice
        options:
        - debug
        - staging
        - release

permissions:
  contents: write
  actions: read

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Dorg.gradle.parallel=true

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    outputs:
      version_name: ${{ steps.version.outputs.version_name }}
      version_code: ${{ steps.version.outputs.version_code }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
      with:
        gradle-home-cache-cleanup: true
        cache-read-only: ${{ github.event_name == 'pull_request' }}
        
    - name: Make gradlew executable
      run: chmod +x ./gradlew

    - name: Validate Gradle wrapper
      uses: gradle/actions/wrapper-validation@v4
      
    - name: Get version info
      id: version
      run: |
        VERSION_NAME=$(grep "versionName" app/build.gradle | head -1 | sed 's/.*versionName[[:space:]]*"\([^"]*\)".*/\1/')
        VERSION_CODE=$(grep "versionCode" app/build.gradle | head -1 | sed 's/.*versionCode[[:space:]]*\([0-9]*\).*/\1/')
        echo "version_name=$VERSION_NAME" >> $GITHUB_OUTPUT
        echo "version_code=$VERSION_CODE" >> $GITHUB_OUTPUT
        echo "Version: $VERSION_NAME ($VERSION_CODE)"
      
    - name: Decode Keystore
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      env:
        ENCODED_STRING: ${{ secrets.SIGNING_KEYSTORE }}
      run: |
        if [ ! -z "$ENCODED_STRING" ]; then
          echo $ENCODED_STRING | base64 -di > app/lemwood.jks
          echo "Keystore decoded successfully"
        else
          echo "No keystore found in secrets"
        fi
        
    - name: Build Debug APK
      run: ./gradlew assembleDebug
      
    - name: Build Staging APK
      if: github.ref == 'refs/heads/develop' || github.event.inputs.build_type == 'staging'
      run: ./gradlew assembleStaging
      
    - name: Build Release APK
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      env:
        SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
        SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
        SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
      run: |
        if [ ! -z "$SIGNING_KEY_ALIAS" ] && [ -f "app/lemwood.jks" ]; then
          ./gradlew assembleRelease
          echo "Release APK built successfully"
        else
          echo "Signing secrets not found or keystore missing, skipping release build"
        fi
        
    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk-${{ github.run_number }}
        path: app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30

    - name: Upload Staging APK
      if: github.ref == 'refs/heads/develop' || github.event.inputs.build_type == 'staging'
      uses: actions/upload-artifact@v4
      with:
        name: staging-apk-${{ github.run_number }}
        path: app/build/outputs/apk/staging/app-staging.apk
        retention-days: 30
        
    - name: Upload Release APK
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: actions/upload-artifact@v4
      with:
        name: release-apk-${{ github.run_number }}
        path: app/build/outputs/apk/release/app-release.apk
        retention-days: 90

  deploy:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download Release APK
      uses: actions/download-artifact@v4
      with:
        name: release-apk-${{ github.run_number }}
        path: ./artifacts
        
    - name: Check if Release APK exists
      id: check_apk
      run: |
        if [ -f "./artifacts/app-release.apk" ]; then
          echo "apk_exists=true" >> $GITHUB_OUTPUT
          echo "Release APK found"
        else
          echo "apk_exists=false" >> $GITHUB_OUTPUT
          echo "Release APK not found"
        fi
        
    - name: Rename APK
      if: steps.check_apk.outputs.apk_exists == 'true'
      run: |
        mv ./artifacts/app-release.apk ./lemwood-tools-${{ needs.build.outputs.version_name }}.apk
        ls -la *.apk
        
    - name: Generate Changelog
      if: steps.check_apk.outputs.apk_exists == 'true'
      run: |
        # Get commits since last tag
        LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
        if [ -z "$LAST_TAG" ]; then
          COMMITS=$(git log --pretty=format:"- %s" --max-count=10)
        else
          COMMITS=$(git log ${LAST_TAG}..HEAD --pretty=format:"- %s")
        fi
        
        # Save changelog to file
        cat > changelog.md << EOF
        ## 柠枺工具箱 ${{ needs.build.outputs.version_name }}
        
        ### 🚀 更新内容
        ${COMMITS}
        
        ### 📱 应用信息
        - **版本号**: ${{ needs.build.outputs.version_code }}
        - **构建时间**: $(date '+%Y-%m-%d %H:%M:%S UTC')
        - **提交**: ${GITHUB_SHA:0:7}
        
        ### 📋 系统要求
        - Android 7.1 (API 25) 或更高版本
        - 约 10MB 存储空间
        EOF
        
    - name: Create Release
      if: steps.check_apk.outputs.apk_exists == 'true'
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ needs.build.outputs.version_name }}
        name: 柠枺工具箱 v${{ needs.build.outputs.version_name }}
        body_path: changelog.md
        draft: false
        prerelease: false
        files: |
          ./lemwood-tools-${{ needs.build.outputs.version_name }}.apk
        make_latest: true